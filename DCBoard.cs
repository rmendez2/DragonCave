//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
namespace DragonCave
{
	public class DCBoard
	{
		public string[,] DCBoardArray;

		public DCBoard ()
		{
			DCBoardArray = new string[4, 4];
			Random rand = new Random();
			int row;
			int col;
			for (row = 0; row<4; row++) {
				for (col=0; col<4; col++) {
					if (row == 0 && col <= 2) {
						DCBoardArray [row, col] = DCRooms.Pit; 
					} else if (row == 1 && col == 0) {
						DCBoardArray [row, col] = DCRooms.Dragon;
					} else if (row == 2 && col == 0) {
						DCBoardArray [row, col] = DCRooms.Gold;
					} else if (row == 3 && col == 0) {
						DCBoardArray [row, col] = DCRooms.Entrance;
					} else {
						DCBoardArray [row, col] = ".";
					}
				}
			}
			for(row = 0; row<4; row++){
				for(col=0; col<4; col++){
					int RandX = rand.Next(0,3);
					int RandY = rand.Next(0,3);
					string temp = DCBoardArray[RandX,RandY];
					DCBoardArray[RandX,RandY] = DCBoardArray[row,col];
					DCBoardArray[row,col] = temp;
				}
			}
		}


		public void PrintDCBoard()
		{
			int row; 
			int col;
			
			for (row = 0; row < 4; row++) 
			{
				for (col=0; col<4; col++) 
				{
					Console.Write (" " + DCBoardArray [row,col] + " ");
				}
				Console.WriteLine (); 
			}
		}
	

		

		
	}
}

